{"version":3,"sources":["Context.js","components/NavBar/NavBarButtons.js","components/NavBar/NavBarButtonsMobile.js","components/NavBar/NavBar.js","components/Post/Post.js","components/Post/EditPost.js","components/Post/MyPost.js","pages/HomePage.js","pages/LoginPage.js","pages/RegisterPage.js","components/NewPostComponent.js","pages/NewPostPage.js","components/EditUser.js","pages/ProfilePage.js","pages/MyPostsPage.js","pages/EditPostPage.js","components/Post/PostConfirm.js","pages/ConfirmSwapPage.js","pages/RecievedLikesPage.js","pages/SCDjelatnikPage.js","App.js","serviceWorker.js","index.js"],"names":["LoginContext","createContext","TokenContext","RoleContext","NavBarButtons","props","useContext","loggedIn","setLoggedIn","setToken","token","role","setRole","useEffect","console","log","className","Fragment","to","type","HomeOutlined","UserOutlined","onClick","removeLikes","count","likes","dot","removeSwaps","swaps","UserAddOutlined","renderSwitch","useState","visible","setVisible","onClose","style","color","MenuOutlined","fontSize","title","width","closable","NavBar","setLikes","setSwaps","axios","post","process","headers","Authorization","then","res","catch","get","data","alt","src","NavBarButtonsMobile","Meta","Card","require","Post","idOglas","kategorija_sobe","kat","paviljon","like1","setLike1","like2","setLike2","like3","setLike3","likeHandler","oglasId","stupanjLajkanja","a","values","notification","message","description","lajk","maxWidth","margin","actions","HeartFilled","HeartOutlined","data-tip","data-for","DeleteOutlined","id","place","effect","Option","Select","EditPost","validateMessages","state","domovi","setState","openNotification","status","open","optionDomovi","this","map","dom","value","idDom","imeDoma","closeHandler","bodyStyle","paddingBottom","labelCol","span","name","onFinish","err","Item","rules","required","initialValue","placeholder","getFieldValue","validator","rule","test","Promise","resolve","reject","prefix","kategorijaSobe","htmlType","React","Component","editPostDrawerVisible","setEditPostDrawerVisible","aktivanTag","aktivan","EditOutlined","marginBottom","Content","Layout","Footer","Panel","Collapse","HomePage","allPosts","setAllPosts","visiblePosts","setVisiblePosts","setID","submitButton","setSubmitButton","postsObjects","oglas","student","MyPost","key","Form","useForm","form","minHeight","padding","defaultActiveKey","onChange","header","wrapperCol","setFieldsValue","domQuery","paviljonQuery","katQuery","kategorijaSobeQuery","values2","visiblePostsTmp","forEach","dom_kat_kategorija_paviljon","odbacujem_post","el","includes","toString","push","undefined","initialValues","residence","scrollToFirstError","label","textAlign","Title","Typography","LoginPage","getRole","token2","userRole","accessToken","onFinishFailed","errorInfo","LockOutlined","RegisterPage","registered","setregistered","min","max","NewPostComponent","gradovi","grad","idGrada","imeGrada","level","NewPostPage","password","username","email","jmbag","ProfilePage","editUserDrawerVisible","setEditUserDrawerVisible","setUsername","setName","setJmbag","setEmail","setId","EditUser","Input","TextArea","MyPostsPage","posts","setPosts","meta","columns","fields","requried","viewMode","idLanac","likeErrorNotification","ConfirmSwap","idLanca","RejectSwap","CheckCircleOutlined","CloseCircleOutlined","ConfirmSwapPage","getPosts","length","PostConfirm","SCDjelatnikPage","lanci","setLanci","getSwaps","uniqueIds","uniqueIdsObject","objekt","oglasi","i","lanciComponent","Object","keys","lanac","bordered","borderBottom","App","config","Provider","exact","path","component","EditPostPage","RecievedLikesPage","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8e1580ea.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const LoginContext = createContext({});\nexport const TokenContext = createContext({});\nexport const RoleContext = createContext({});\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Button, Badge } from \"antd\";\nimport { HomeOutlined, UserOutlined, UserAddOutlined } from \"@ant-design/icons\";\nimport \"./NavBar.css\";\nimport { Link } from \"react-router-dom\";\n\nimport { LoginContext } from \"../../Context\";\nimport { TokenContext } from \"../../Context\";\nimport { RoleContext } from \"../../Context\";\n\nfunction NavBarButtons(props) {\n  const { loggedIn, setLoggedIn } = useContext(LoginContext);\n  const { token, setToken } = useContext(TokenContext);\n  const { role, setRole } = useContext(RoleContext);\n\n  useEffect(() => {\n    console.log(\"role2\");\n\n    console.log(role);\n  }, []);\n\n  const renderSwitch = (loggedIn, role) => {\n    console.log(\"loggedIn, role\");\n    console.log(loggedIn);\n    console.log(role);\n    if (loggedIn && role == \"STUDENT\") {\n      return (\n        <>\n          <React.Fragment>\n            <Link to=\"/\">\n              <Button type=\"text\" className=\"navButton\">\n                <HomeOutlined />\n                Početna\n              </Button>\n            </Link>\n\n            <Link to=\"/myposts\">\n              <Button type=\"text\" className=\"navButton\">\n                <UserOutlined />\n                Moji oglasi\n              </Button>\n            </Link>\n\n            <Link to=\"/profile\">\n              <Button type=\"text\" className=\"navButton\">\n                <UserOutlined />\n                Uredi profil\n              </Button>\n            </Link>\n\n            <Link to=\"/recievedlikesposts\">\n              <Button\n                type=\"text\"\n                className=\"navButton\"\n                onClick={() => props.removeLikes()}\n              >\n                <UserOutlined />\n                Dobiveni lajkovi\n                <Badge count={props.likes} dot />\n              </Button>\n            </Link>\n\n            <Link to=\"/confirmswap\">\n              <Button\n                type=\"text\"\n                className=\"navButton\"\n                onClick={() => props.removeSwaps()}\n              >\n                <UserOutlined />\n                Moguće zamjene\n                <Badge count={props.swaps} dot />\n              </Button>\n            </Link>\n\n            <Link to=\"/\">\n              <Button\n                type=\"text\"\n                className=\"navButton\"\n                onClick={() => {\n                  setLoggedIn(false);\n                  setRole(false);\n                  setToken(\"\");\n                }}\n              >\n                <UserOutlined />\n                Odjava\n              </Button>\n            </Link>\n          </React.Fragment>\n        </>\n      );\n    } else if (loggedIn) {\n      return (\n        <>\n          <React.Fragment>\n            <Link to=\"/\">\n              <Button\n                type=\"text\"\n                className=\"navButton\"\n                onClick={() => {\n                  setLoggedIn(false);\n                  setRole(false);\n                  setToken(\"\");\n                }}\n              >\n                <UserOutlined />\n                Odjava\n              </Button>\n            </Link>\n          </React.Fragment>\n        </>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Link to=\"/\">\n            <Button type=\"text\" className=\"navButton\">\n              <HomeOutlined />\n              Početna\n            </Button>\n          </Link>\n\n          <Link to=\"/login\">\n            <Button type=\"text\" className=\"navButton\">\n              <UserOutlined />\n              Prijavi se\n            </Button>\n          </Link>\n\n          <Link to=\"/register\">\n            <Button type=\"text\" className=\"navButton\">\n              <UserAddOutlined />\n              Registriraj se\n            </Button>\n          </Link>\n        </React.Fragment>\n      );\n    }\n  };\n\n  return <div className=\"navContainer\">{renderSwitch(loggedIn, role)}</div>;\n}\n\nexport default NavBarButtons;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Drawer, Button, Badge } from \"antd\";\nimport {\n  HomeOutlined,\n  UserOutlined,\n  UserAddOutlined,\n  MenuOutlined,\n} from \"@ant-design/icons\";\nimport \"./NavBar.css\";\nimport { Link } from \"react-router-dom\";\n\nimport { LoginContext } from \"../../Context\";\nimport { TokenContext } from \"../../Context\";\nimport { RoleContext } from \"../../Context\";\n\nfunction NavBarButtons(props) {\n  const { loggedIn, setLoggedIn } = useContext(LoginContext);\n  const { token, setToken } = useContext(TokenContext);\n  const { role, setRole } = useContext(RoleContext);\n\n  const [visible, setVisible] = useState(false);\n  // const[childrenDrawer, setchildrenDrawer] = useState(false);\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const renderSwitch = (loggedIn, role) => {\n    console.log(\"loggedIn, role\");\n    console.log(loggedIn);\n    console.log(role);\n    if (loggedIn && role == \"STUDENT\") {\n      console.log(\"JA SAM STUDENT\");\n\n      return (\n        <>\n          <React.Fragment>\n            <Link to=\"/\">\n              <Button type=\"text\" className=\"navButtonMobile\" onClick={onClose}>\n                <HomeOutlined />\n                Početna\n              </Button>\n            </Link>\n\n            <Link to=\"/myposts\">\n              <Button type=\"text\" className=\"navButtonMobile\" onClick={onClose}>\n                <UserOutlined />\n                Moji oglasi\n              </Button>\n            </Link>\n\n            <Link to=\"/profile\">\n              <Button type=\"text\" className=\"navButtonMobile\" onClick={onClose}>\n                <UserOutlined />\n                Uredi profil\n              </Button>\n            </Link>\n\n            <Link to=\"/recievedlikesposts\">\n              <Button\n                type=\"text\"\n                className=\"navButtonMobile\"\n                onClick={() => props.removeLikes()}\n              >\n                <UserOutlined />\n                Dobiveni lajkovi\n                <Badge count={props.likes} dot />\n              </Button>\n            </Link>\n\n            <Link to=\"/confirmswap\">\n              <Button\n                type=\"text\"\n                className=\"navButtonMobile\"\n                onClick={() => props.removeSwaps()}\n              >\n                <UserOutlined />\n                Moguće zamjene\n                <Badge count={props.swaps} dot />\n              </Button>\n            </Link>\n\n            <Link to=\"/\">\n              <Button\n                type=\"text\"\n                className=\"navButtonMobile\"\n                onClick={() => {\n                  setLoggedIn(false);\n                  setVisible(true);\n                  setRole(false);\n                  setToken(\"\");\n                }}\n              >\n                <UserOutlined />\n                Odjava\n              </Button>\n            </Link>\n          </React.Fragment>\n        </>\n      );\n    } else if (loggedIn) {\n      console.log(\"JA SAM DJELATNIK\");\n      return (\n        <React.Fragment>\n          {\" \"}\n          <Link to=\"/\">\n            <Button\n              type=\"text\"\n              className=\"navButtonMobile\"\n              onClick={() => {\n                setLoggedIn(false);\n                setVisible(true);\n                setRole(false);\n                setToken(\"\");\n              }}\n            >\n              <UserOutlined />\n              Odjava\n            </Button>\n          </Link>\n        </React.Fragment>\n      );\n    } else {\n      console.log(\"JA NISAM NIŠTA\");\n\n      return (\n        <React.Fragment>\n          <Link to=\"/\">\n            <Button type=\"text\" className=\"navButtonMobile\" onClick={onClose}>\n              <HomeOutlined />\n              Početna\n            </Button>\n          </Link>\n\n          <Link to=\"/login\">\n            <Button type=\"text\" className=\"navButtonMobile\" onClick={onClose}>\n              <UserOutlined />\n              Prijavi se\n            </Button>\n          </Link>\n\n          <Link to=\"/register\">\n            <Button type=\"text\" className=\"navButtonMobile\" onClick={onClose}>\n              <UserAddOutlined />\n              Registriraj se\n            </Button>\n          </Link>\n        </React.Fragment>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <Button\n        className=\"navContainerMobile\"\n        type=\"text\"\n        onClick={showDrawer}\n        style={{ color: \"#fff\" }}\n      >\n        <MenuOutlined style={{ fontSize: \"24px\" }} />\n      </Button>\n      <Drawer\n        title=\"RoomSwitchr\"\n        width={200}\n        closable={true}\n        onClose={onClose}\n        visible={visible}\n      >\n        {renderSwitch(loggedIn, role)}\n      </Drawer>\n    </div>\n  );\n}\n\nexport default NavBarButtons;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport \"./NavBar.css\";\nimport { Link } from \"react-router-dom\";\nimport NavBarButtons from \"./NavBarButtons\";\nimport NavBarButtonsMobile from \"./NavBarButtonsMobile\";\nimport axios from \"axios\";\nimport { LoginContext } from \"../../Context\";\nimport { TokenContext } from \"../../Context\";\nimport { RoleContext } from \"../../Context\";\n\nfunction NavBar() {\n  const { loggedIn, setLoggedIn } = useContext(LoginContext);\n  const { token, setToken } = useContext(TokenContext);\n  const { role, setRole } = useContext(RoleContext);\n\n  const [likes, setLikes] = useState(0);\n  const [swaps, setSwaps] = useState(0);\n\n  const getLikes = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/home/notification/like`, {\n        headers: {\n          Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n        },\n      })\n      .then((res) => {\n        setLikes(res.data);\n      })\n      .catch((res) => {});\n  };\n\n  const getSwaps = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/home/notification/swap`, {\n        headers: {\n          Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n        },\n      })\n      .then((res) => {\n        setSwaps(res.data);\n      })\n      .catch((res) => {});\n  };\n\n  const removeLikes = () => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/home/notification/like`,\n        {},\n        {\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        }\n      )\n      .then((res) => {\n        setLikes(0);\n      })\n      .catch((res) => {});\n  };\n\n  const removeSwaps = () => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/home/notification/swap`,\n        {},\n        {\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        }\n      )\n      .then((res) => {\n        setSwaps(0);\n      })\n      .catch((res) => {});\n  };\n\n  useEffect(() => {\n    console.log(role);\n    if (loggedIn && role == \"STUDENT\") {\n      getLikes();\n      getSwaps();\n    }\n  }, []);\n\n  return (\n    <div className=\"nav\">\n      <img alt=\"logo\" src=\"/room.png\" className=\"navLogo\" />\n      <Link to=\"/\">\n        <span className=\"navName\">RoomSwitchr</span>\n      </Link>\n      <NavBarButtons\n        likes={likes}\n        swaps={swaps}\n        removeLikes={removeLikes}\n        removeSwaps={removeSwaps}\n      />\n      <NavBarButtonsMobile\n        likes={likes}\n        swaps={swaps}\n        removeLikes={removeLikes}\n        removeSwaps={removeSwaps}\n      />\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Card, Avatar, notification } from \"antd\";\nimport axios from \"axios\";\n\nimport ReactTooltip from \"react-tooltip\";\n\nimport { TokenContext } from \"../../Context\";\nimport { LoginContext } from \"../../Context\";\n\nimport { HeartOutlined, HeartFilled, DeleteOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nvar MappleToolTip = require(\"reactjs-mappletooltip\");\n\nfunction Post(props) {\n  const title = \"Dom: \" + props.title;\n  //const description = props.description;\n  const idOglas = props.idOglas;\n  const kategorija_sobe = props.kategorija_sobe;\n  const kat = props.kat;\n  const paviljon = props.paviljon;\n\n  const { token, setToken } = useContext(TokenContext);\n  const { loggedIn, setLoggedIn } = useContext(LoginContext);\n  const [like, setLike] = useState();\n\n  const [like1, setLike1] = useState(false);\n  const [like2, setLike2] = useState(false);\n  const [like3, setLike3] = useState(false);\n\n  const likeErrorNotification = () => {\n    notification[\"error\"]({\n      message: \"Greška\",\n      description: \"Došlo je do greške prilikom lajkanja oglasa. Provjerite svoj aktivni oglas.\",\n    });\n  };\n\n  const likeHandler = async (oglasId, stupanjLajkanja) => {\n    let values = {\n      oglasId: oglasId,\n      stupanjLajkanja: stupanjLajkanja,\n    };\n\n    try {\n      await axios\n        .post(`${process.env.REACT_APP_API_URL}/api/home/`, values, {\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        })\n        .then((res) => {\n          switch (res.data.stupanjLajkanja) {\n            case 1:\n              setLike1(true);\n              setLike2(false);\n              setLike3(false);\n              break;\n            case 2:\n              setLike1(false);\n              setLike2(true);\n              setLike3(false);\n              break;\n\n            case 3:\n              setLike1(false);\n              setLike2(false);\n              setLike3(true);\n              break;\n\n            case 0:\n              setLike1(false);\n              setLike2(false);\n              setLike3(false);\n              break;\n\n            default:\n              break;\n          }\n        });\n    } catch (error) {\n      likeErrorNotification();\n    }\n  };\n\n  const setLikeFromAPI = (lajk) => {\n    if (lajk == 1) {\n      setLike1(true);\n    }\n\n    if (lajk == 2) {\n      setLike2(true);\n    }\n\n    if (lajk == 3) {\n      setLike3(true);\n    }\n  };\n\n  const Remove = () => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/home/`,\n        {\n          stupanjLajkanja: \"4\",\n          oglasId: idOglas,\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        }\n      )\n      .then((res) => {});\n  };\n\n  useEffect(() => {\n    setLikeFromAPI(props.lajk);\n  }, []);\n\n  return (\n    <div>\n      {loggedIn ? (\n        <Card\n          style={{ maxWidth: \"720px\", margin: \"auto\" }}\n          actions={[\n            like1 ? (\n              <div onClick={() => likeHandler(idOglas, \"0\")}>\n                <HeartFilled />\n              </div>\n            ) : (\n              <div onClick={() => likeHandler(idOglas, \"1\")}>\n                <HeartOutlined />\n              </div>\n            ),\n\n            like2 ? (\n              <div onClick={() => likeHandler(idOglas, \"0\")}>\n                <HeartFilled />\n                <HeartFilled />\n              </div>\n            ) : (\n              <div onClick={() => likeHandler(idOglas, \"2\")}>\n                <HeartOutlined />\n                <HeartOutlined />\n              </div>\n            ),\n\n            like3 ? (\n              <div onClick={() => likeHandler(idOglas, \"0\")}>\n                <HeartFilled />\n                <HeartFilled />\n                <HeartFilled />\n              </div>\n            ) : (\n              <div onClick={() => likeHandler(idOglas, \"3\")}>\n                <HeartOutlined />\n                <HeartOutlined />\n                <HeartOutlined />\n              </div>\n            ),\n\n            // <Button type=\"text\" className=\"navButton\">Ne prikazuj više</Button>,\n\n            <div className=\"App\">\n              <p\n                data-tip\n                data-for=\"registerTip\"\n                onClick={() => Remove(idOglas)}\n              >\n                <DeleteOutlined />\n              </p>\n\n              <ReactTooltip id=\"registerTip\" place=\"top\" effect=\"solid\">\n                Ne prikazuj više\n              </ReactTooltip>\n            </div>,\n          ]}\n        >\n          <Meta\n            title={title}\n            description={\n              <React.Fragment>\n                <p>Paviljon:{paviljon}</p>\n                <p>Kat:{kat}</p>\n                <p>Kategorija sobe:{kategorija_sobe}</p>\n              </React.Fragment>\n            }\n          />\n        </Card>\n      ) : (\n        <Card style={{ maxWidth: \"720px\", margin: \"auto\" }}>\n          <Meta\n            title={title}\n            description={\n              <React.Fragment>\n                <p>Paviljon: {paviljon}</p>\n                <p>Kat: {kat}</p>\n                <p>Kategorija sobe: {kategorija_sobe}</p>\n              </React.Fragment>\n            }\n          />\n        </Card>\n      )}\n\n      <br />\n    </div>\n  );\n}\n\nexport default Post;\n","import React from \"react\";\nimport { Form, Input, Button, Drawer, Select, notification } from \"antd\";\nimport { HomeOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\n\nimport \"./EditWorkerDrawerCssFix.css\";\nconst { Option } = Select;\n\nclass EditPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { domovi: [], post: null };\n  }\n\n  componentDidMount() {\n    var domovi = [];\n    axios.get(`${process.env.REACT_APP_API_URL}/api/v1/dom`).then((res) => {\n      domovi = res.data;\n      this.setState({ domovi: domovi });\n    });\n  }\n\n  validateMessages = () => {};\n\n  render() {\n    const openNotification = (status) => {\n      if (status === 1) {\n        notification.open({\n          message: \"Uspješna predaja\",\n          description: \"Novi oglas je uspješno predan!\",\n        });\n      } else if (status === 0) {\n        notification.open({\n          message: \"Neuspješna predaja\",\n          description: \"Molimo pokušajte ponovno.\",\n        });\n      }\n    };\n\n    const onFinish = (values) => {\n      values.idOglas = this.props.idOglas;\n      axios\n        .post(`${process.env.REACT_APP_API_URL}/api/v1/post`, values, {\n          headers: {\n            Authorization: \"Bearer \" + this.props.token, //the token is a variable which holds the token\n          },\n        })\n        .then((res) => {\n          openNotification(1);\n        })\n        .catch((err) => {\n          openNotification(0);\n        });\n    };\n\n    const layout = {\n      labelCol: { span: 8 },\n    };\n    let optionDomovi = this.state.domovi.map((dom) => (\n      <Option value={dom.idDom}>{dom.imeDoma}</Option>\n    ));\n\n    return (\n      <div>\n        <Drawer\n          title=\"Uredi oglas\"\n          onClose={() => this.props.closeHandler()}\n          visible={this.props.visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          // style={{ width: \"100vw\" }}\n          width={\"400px\"}\n        >\n          <Form\n            {...layout}\n            name=\"nest-messages\"\n            onFinish={onFinish}\n            validateMessages={this.validateMessages}\n          >\n            <Form.Item\n              name=\"domID\"\n              rules={[{ required: true, message: \"Odaberite dom!\" }]}\n              initialValue={this.props.idDom}\n            >\n              <Select placeholder=\"Dom\">{optionDomovi}</Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"paviljon\"\n              rules={[\n                { required: true, message: \"Odaberite paviljon!\" },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    const re = /^[0-9\\b]+$/;\n                    if (\n                      value === \"\" ||\n                      (re.test(value) && value >= 1 && value <= 20)\n                    ) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\"Upišite broj od 1 do 20!\");\n                  },\n                }),\n              ]}\n              initialValue={this.props.paviljon}\n            >\n              <Input\n                prefix={<HomeOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Paviljon\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"kategorijaSobe\"\n              rules={[\n                { required: true, message: \"Odaberite kategoriju sobe!\" },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    const re = /^[0-9\\b]+$/;\n                    if (\n                      value === \"\" ||\n                      (re.test(value) && value >= 1 && value <= 7)\n                    ) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\"Upišite broj od 1 do 7!\");\n                  },\n                }),\n              ]}\n              initialValue={this.props.kategorijaSobe}\n            >\n              <Input\n                prefix={<HomeOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Kategorija sobe\"\n              />\n            </Form.Item>\n\n            <Form.Item\n              name=\"kat\"\n              rules={[\n                { required: true, message: \"Odaberite kat!\" },\n                ({ getFieldValue }) => ({\n                  validator(rule, value) {\n                    const re = /^[0-9\\b]+$/;\n                    if (\n                      value === \"\" ||\n                      (re.test(value) && value >= 1 && value <= 10)\n                    ) {\n                      return Promise.resolve();\n                    }\n                    return Promise.reject(\"Upišite broj od 1 do 10!\");\n                  },\n                }),\n              ]}\n              initialValue={this.props.kat}\n            >\n              <Input\n                prefix={<HomeOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Kat\"\n              />\n            </Form.Item>\n\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n              >\n                Spremi promjene\n              </Button>\n            </Form.Item>\n          </Form>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default EditPost;\n","import React, { useContext, useState } from \"react\";\nimport { Card, Avatar, Tag } from \"antd\";\nimport { TokenContext } from \"../../Context\";\nimport { LoginContext } from \"../../Context\";\nimport EditPost from \"./EditPost\";\n\nimport { EditOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nfunction Post(props) {\n  const [editPostDrawerVisible, setEditPostDrawerVisible] = useState(false);\n\n  const title = \"Dom: \" + props.title;\n  //const description = props.description;\n  const idOglas = props.idOglas;\n  const kategorija_sobe = props.kategorija_sobe;\n  const kat = props.kat;\n  const paviljon = props.paviljon;\n\n  const { token, setToken } = useContext(TokenContext);\n  const { loggedIn, setLoggedIn } = useContext(LoginContext);\n\n  const showDrawer = () => {\n    setEditPostDrawerVisible(true);\n  };\n\n  const onCloseDrawer = () => {\n    setEditPostDrawerVisible(false);\n  };\n\n  let aktivanTag = null;\n  if (props.aktivan) {\n    aktivanTag = <Tag color=\"green\">Aktivan oglas</Tag>;\n  } else {\n    aktivanTag = <Tag color=\"red\">Neaktivan oglas</Tag>;\n  }\n\n  return (\n    <div>\n      <Card\n        style={{ maxWidth: \"720px\", margin: \"auto\" }}\n        actions={[\n          <div onClick={() => showDrawer()}>\n            <EditOutlined /> uredi\n          </div>,\n        ]}\n      >\n        <Tag color=\"magenta\" style={{ marginBottom: \"10px\" }}>\n          Moja Objava\n        </Tag>\n        {aktivanTag}\n        <br />\n        <Meta\n          title={title}\n          description={\n            <React.Fragment>\n              <p>Paviljon: {paviljon}</p>\n              <p>Kat: {kat}</p>\n              <p>Kategorija sobe: {kategorija_sobe}</p>\n            </React.Fragment>\n          }\n        />\n      </Card>\n      <EditPost\n        visible={editPostDrawerVisible}\n        closeHandler={() => onCloseDrawer()}\n        idOglas={idOglas}\n        kat={kat}\n        paviljon={paviljon}\n        kategorijaSobe={kategorija_sobe}\n        dom={props.title}\n        idDom={props.idDom}\n        token={token}\n      />\n\n      <br />\n    </div>\n  );\n}\n\nexport default Post;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Layout, Form, Input, Button } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport Post from \"../components/Post/Post\";\nimport MyPost from \"../components/Post/MyPost\";\nimport axios from \"axios\";\nimport { Collapse } from \"antd\";\n\nimport { LoginContext } from \"../Context\";\nimport { TokenContext } from \"../Context\";\n\nconst { Content, Footer } = Layout;\nconst { Panel } = Collapse;\n\nexport default function HomePage() {\n  const { loggedIn, setLoggedIn } = useContext(LoginContext);\n  const { token, setToken } = useContext(TokenContext);\n  const [allPosts, setAllPosts] = useState([]);\n  const [visiblePosts, setVisiblePosts] = useState([]);\n  const [id, setID] = useState([]);\n  const [submitButton, setSubmitButton] = useState(0);\n\n  const layout = {\n    labelCol: { span: 4 },\n    wrapperCol: { span: 20 },\n  };\n\n  const [applyFilterDrawerVisible, setApplyFilterDrawerVisible] = useState(\n    false\n  );\n\n  const showDrawer = () => {\n    setApplyFilterDrawerVisible(true);\n  };\n\n  const onCloseDrawer = () => {\n    setApplyFilterDrawerVisible(false);\n  };\n\n  const getPosts = () => {\n    if (loggedIn) {\n      axios\n        .get(`${process.env.REACT_APP_API_URL}/api/v1/currentuser/`, {\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        })\n        .then((res) => {\n          setID(res.data.id);\n        });\n    }\n\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/home/`, {\n        headers: {\n          Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n        },\n      })\n      .then((res) => {\n        setAllPosts(res.data);\n        setVisiblePosts(res.data);\n      });\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  let postsObjects = visiblePosts.map((post) => {\n    if (loggedIn) {\n      if (post.oglas.student.id === id) {\n        return (\n          <MyPost\n            key={post.oglas.idOglas}\n            kat={post.oglas.kat}\n            idOglas={post.oglas.idOglas}\n            paviljon={post.oglas.paviljon}\n            kategorija_sobe={post.oglas.kategorijaSobe}\n            title={post.oglas.dom.imeDoma}\n            idDom={post.oglas.dom.idDom}\n            aktivan={post.oglas.aktivan}\n          />\n        );\n      } else {\n        return (\n          <Post\n            key={post.oglas.idOglas}\n            kat={post.oglas.kat}\n            idOglas={post.oglas.idOglas}\n            paviljon={post.oglas.paviljon}\n            kategorija_sobe={post.oglas.kategorijaSobe}\n            title={post.oglas.dom.imeDoma}\n            lajk={post.stupanjLajkanja}\n          />\n        );\n      }\n    } else {\n      return (\n        <Post\n          key={post.oglas.idOglas}\n          kat={post.oglas.kat}\n          idOglas={post.oglas.idOglas}\n          paviljon={post.oglas.paviljon}\n          kategorija_sobe={post.oglas.kategorijaSobe}\n          title={post.oglas.dom.imeDoma}\n        />\n      );\n    }\n  });\n  const [form] = Form.useForm();\n  const handleSearchChange = (values) => {\n    if (submitButton == 1) {\n      axios\n        .get(`${process.env.REACT_APP_API_URL}/api/home/filter`, {\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        })\n        .then((res) => {\n          console.log(res.data);\n          form.setFieldsValue({\n            domQuery: res.data.dom,\n            paviljonQuery: res.data.paviljon,\n            katQuery: res.data.kat,\n            kategorijaSobeQuery: res.data.kategorijaSobe,\n          });\n        })\n        .catch((res) => {});\n    } else if (submitButton == 2) {\n      console.log(values);\n      let values2 = {\n        dom: values.domQuery,\n        paviljon: values.paviljonQuery,\n        kat: values.katQuery,\n        kategorijaSobe: values.kategorijaSobeQuery,\n      };\n      axios\n        .post(`${process.env.REACT_APP_API_URL}/api/home/filter`, values2, {\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        })\n        .then((res) => {})\n        .catch((res) => {});\n    } else {\n      let visiblePostsTmp = [];\n      allPosts.forEach((post) => {\n        let dom_kat_kategorija_paviljon = [\n          values.domQuery,\n          values.katQuery,\n          values.kategorijaSobeQuery,\n          values.paviljonQuery,\n        ];\n        if (\n          typeof values.domQuery !== \"undefined\" ||\n          typeof values.katQuery !== \"undefined\" ||\n          typeof values.kategorijaSobeQuery !== \"undefined\" ||\n          typeof values.paviljonQuery !== \"undefined\"\n        ) {\n          let count = 0;\n          let odbacujem_post = false;\n          dom_kat_kategorija_paviljon.forEach((el) => {\n            if (el) {\n              if (count == 0) {\n                if (!post.oglas.dom.imeDoma.includes(values.domQuery)) {\n                  odbacujem_post = true;\n                }\n              } else if (count == 1) {\n                if (!post.oglas.kat.toString().includes(values.katQuery)) {\n                  odbacujem_post = true;\n                }\n              } else if (count == 2) {\n                if (\n                  !post.oglas.kategorijaSobe\n                    .toString()\n                    .includes(values.kategorijaSobeQuery)\n                ) {\n                  odbacujem_post = true;\n                }\n              } else if (count == 3) {\n                if (\n                  !post.oglas.paviljon.toString().includes(values.paviljonQuery)\n                ) {\n                  odbacujem_post = true;\n                }\n              }\n            }\n            count++;\n          });\n          if (!odbacujem_post) {\n            visiblePostsTmp.push(post);\n          }\n        }\n      });\n\n      if (\n        (values.paviljonQuery === undefined || values.paviljonQuery === \"\") &&\n        (values.katQuery === undefined || values.katQuery === \"\") &&\n        (values.kategorijaSobeQuery === undefined ||\n          values.kategorijaSobeQuery === \"\") &&\n        (values.domQuery === undefined || values.domQuery === \"\")\n      ) {\n        visiblePostsTmp = allPosts;\n      }\n\n      setVisiblePosts(visiblePostsTmp);\n    }\n  };\n\n  return (\n    <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n      <NavBar />\n      <Content style={{ padding: \"0 50px\" }}>\n        <div\n          className=\"site-layout-content\"\n          style={{ maxWidth: \"720px\", margin: \"0 auto\" }}\n        >\n          <br />\n\n          <Collapse defaultActiveKey={[\"0\"]} onChange={() => {}}>\n            <Panel header=\"Filtriranje oglasa\" key=\"1\">\n              <Form\n                {...layout}\n                name=\"register\"\n                onFinish={handleSearchChange}\n                form={form}\n                initialValues={{\n                  residence: [\"zhejiang\", \"hangzhou\", \"xihu\"],\n                  prefix: \"86\",\n                }}\n                scrollToFirstError\n              >\n                <Form.Item name=\"domQuery\" label=\"Dom\">\n                  <Input />\n                </Form.Item>\n\n                <Form.Item name=\"paviljonQuery\" label=\"Paviljon\">\n                  <Input />\n                </Form.Item>\n\n                <Form.Item name=\"katQuery\" label=\"Kat\">\n                  <Input />\n                </Form.Item>\n\n                <Form.Item name=\"kategorijaSobeQuery\" label=\"Kategorija Sobe\">\n                  <Input />\n                </Form.Item>\n\n                <Form.Item style={{ textAlign: \"right\" }}>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    onClick={() => setSubmitButton(3)}\n                  >\n                    Pretraži\n                  </Button>\n                  {loggedIn ? (\n                    <>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        onClick={() => setSubmitButton(2)}\n                        style={{ margin: \"10px\" }}\n                      >\n                        Spremi filter\n                      </Button>\n                      <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        onClick={() => setSubmitButton(1)}\n                      >\n                        Prikaži spremljene filtere\n                      </Button>\n                    </>\n                  ) : null}\n                </Form.Item>\n              </Form>\n            </Panel>\n          </Collapse>\n\n          <br />\n\n          {postsObjects}\n\n          <br />\n        </div>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        PiccoloGrupa © 2020 FER PI\n      </Footer>\n    </Layout>\n  );\n}\n","import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport { Layout, Typography, message, Card, notification } from \"antd\";\nimport { Form, Input, Button } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport {\n  UserOutlined,\n  LockOutlined,\n  StepForwardOutlined,\n} from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { LoginContext } from \"../Context\";\nimport { TokenContext } from \"../Context\";\nimport { RoleContext } from \"../Context\";\n\nconst { Content, Footer } = Layout;\nconst { Title } = Typography;\n\n//ova funkcija samo sluzi za ne imat memoryleak\nfunction useStateSafely(initialValue) {\n  const [value, setValue] = useState(initialValue);\n  const isSafe = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isSafe.current = false;\n    };\n  }, []);\n\n  const setValueSafely = (newValue) => {\n    if (isSafe.current) {\n      setValue(newValue);\n    }\n  };\n\n  return [value, setValueSafely];\n}\n\nexport default function LoginPage() {\n  const { loggedIn, setLoggedIn } = useContext(LoginContext);\n  const { token, setToken } = useContext(TokenContext);\n  // const [role, setRole] = useStateSafely(\"\");\n  const { role, setRole } = useContext(RoleContext);\n\n  const onFinishFailed = (errorInfo) => {};\n\n  const onFinish = (values) => {\n    const openNotification = (status) => {\n      if (status === 1) {\n        notification.open({\n          message: \"Prijava uspješna\",\n          description: \"Prebacujemo vas\",\n        });\n        setLoggedIn(true);\n      } else if (status === 0) {\n        notification.open({\n          message: \"Prijava neuspješna\",\n          description: \"Molimo pokušajte ponovno\",\n        });\n      }\n    };\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/v1/signin`, values)\n      .then((res) => {\n        let token = res.data.accessToken;\n        setToken(token);\n        getRole(res.data.accessToken);\n        console.log(res.data.role);\n        // setRole(res.data.role);\n        openNotification(1);\n      })\n      .catch((res) => {\n        openNotification(0);\n      });\n  };\n\n  const getRole = (token2) => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/v1/currentuser`, {\n        headers: {\n          Authorization: \"Bearer \" + token2, //the token is a variable which holds the token\n        },\n      })\n      .then((res) => {\n        console.log(\"new role \" + res.data.userRole);\n        setRole(res.data.userRole);\n        console.log(\"role variable: \" + role);\n      });\n  };\n\n  useEffect(() => {\n    if (token) {\n      getRole(token);\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loggedIn && role === \"SC_DJELATNIK\" ? (\n        <Redirect to=\"/scdjelatnik\" />\n      ) : null}\n      {loggedIn && role === \"STUDENT\" ? <Redirect to=\"/\" /> : null}\n      <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n        <NavBar />\n        <Content style={{ maxWidth: \"720px\", margin: \"auto\", padding: \"2em\" }}>\n          <Card>\n            <Title>Prijava</Title>\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  { required: true, message: \"Upiši svoje korisničko ime!\" },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Korisničko ime\"\n                />\n              </Form.Item>\n              <Form.Item\n                name=\"password\"\n                rules={[{ required: true, message: \"Upiši svoju lozinku!\" }]}\n              >\n                <Input\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  placeholder=\"Lozinka\"\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  Prijavi se\n                </Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          PiccoloGrupa © 2020 FER PI\n        </Footer>\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Layout, Typography, notification } from \"antd\";\nimport { Form, Input, Button, Card } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nconst { Content, Footer } = Layout;\nconst { Title } = Typography;\n\nexport default function RegisterPage() {\n  const [registered, setregistered] = useState(false);\n\n  const onFinish = (values) => {\n    delete values[\"confirmPassword\"];\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/v1/signup`, values) //saljemo sve valuese osim confirmPassword\n      .then((res) => {\n        openNotification(1);\n        setregistered(true);\n      })\n      .catch((res) => {\n        openNotification(0);\n      });\n  };\n\n  const onFinishFailed = (errorInfo) => {};\n\n  const openNotification = (status) => {\n    if (status === 1) {\n      notification.open({\n        message: \"Registracija uspješna\",\n        description: \"Biti ćete prebačeni na stranicu za prijavu\",\n      });\n    } else if (status === 0) {\n      notification.open({\n        message: \"Registracija neuspješna\",\n        description: \"Molimo pokušajte ponovno\",\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {registered ? <Redirect to=\"/login\" /> : null}\n      <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n        <NavBar />\n        <Content style={{ maxWidth: \"720px\", margin: \"auto\", padding: \"2em\" }}>\n          <Card>\n            <Title>Registracija</Title>\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"username\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Upiši jedinstveno korisničko ime!\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Korisničko ime\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"email\"\n                rules={[\n                  { required: true, message: \"Upiši svoj Email!\" },\n                  { type: \"email\", message: \"Neispravan unos email-a\" },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Email\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"jmbag\"\n                rules={[\n                  { required: true, message: \"Upiši svoj JMBAG!\" },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                      const re = /^[0-9\\b]+$/;\n                      if (value === \"\" || re.test(value)) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(\"Neispravan unos JMBAG-a!\");\n                    },\n                  }),\n                  { min: 10, message: \"JMBAG mora sadržavati 10 brojeva!\" },\n                  { max: 10, message: \"JMBAG mora sadržavati 10 brojeva!\" },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"JMBAG\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"name\"\n                rules={[{ required: true, message: \"Upiši svoje ime!\" }]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Ime i prezime\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  { required: true, message: \"Upiši svoju lozinku!\" },\n                  { min: 8, message: \"Potrebno najmanje 8 znakova!\" },\n                ]}\n              >\n                <Input\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  placeholder=\"Lozinka\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"confirmPassword\"\n                rules={[\n                  { required: true, message: \"Potvrdi svoju lozinku!\" },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                      if (!value || getFieldValue(\"password\") === value) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(\"Lozinke se ne podudaraju!\");\n                    },\n                  }),\n                ]}\n              >\n                <Input\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  placeholder=\"Potvrdi lozinku\"\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  Registriraj se\n                </Button>\n              </Form.Item>\n            </Form>\n          </Card>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          PiccoloGrupa © 2020 FER PI\n        </Footer>\n        {/* <Button onClick={redirectLogin}>redirect</Button> */}\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  Form,\n  Select,\n  Typography,\n  Input,\n  notification,\n} from \"antd\";\nimport { HomeOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\n\nconst { Title } = Typography;\nconst { Option } = Select;\n\nclass NewPostComponent extends React.Component {\n  token = this.props.token;\n  constructor(props) {\n    super(props);\n    this.state = { gradovi: [], domovi: [] };\n  }\n\n  componentDidMount() {\n    var gradovi = [];\n    axios.get(`${process.env.REACT_APP_API_URL}/api/v1/grad`).then((res) => {\n      gradovi = res.data;\n      this.setState({ gradovi: gradovi });\n    });\n\n    var domovi = [];\n    axios.get(`${process.env.REACT_APP_API_URL}/api/v1/dom`).then((res) => {\n      domovi = res.data;\n      this.setState({ domovi: domovi });\n    });\n  }\n\n  render() {\n    const onFinish = (values) => {\n      axios\n        .post(`${process.env.REACT_APP_API_URL}/api/v1/post`, values, {\n          headers: {\n            Authorization: \"Bearer \" + this.props.token, //the token is a variable which holds the token\n          },\n        })\n        .then((res) => {\n          openNotification(1);\n        })\n        .catch((err) => {\n          openNotification(0);\n        });\n    };\n\n    const openNotification = (status) => {\n      if (status === 1) {\n        notification.open({\n          message: \"Uspješna predaja\",\n          description: \"Novi oglas je uspješno predan!\",\n        });\n      } else if (status === 0) {\n        notification.open({\n          message: \"Neuspješna predaja\",\n          description: \"Molimo pokušajte ponovno.\",\n        });\n      }\n    };\n\n    const onFinishFailed = (errorInfo) => {};\n\n    let optionGradovi = this.state.gradovi.map((grad) => (\n      <Option value={grad.idGrada}>{grad.imeGrada}</Option>\n    ));\n\n    let optionDomovi = this.state.domovi.map((dom) => (\n      <Option value={dom.idDom}>{dom.imeDoma}</Option>\n    ));\n\n    return (\n      <Card>\n        <Title>Novi oglas</Title>\n        <Title level={4}>Opis sobe</Title>\n        <Form\n          name=\"newPost\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          {/* <Form.Item\n            name=\"grad\"\n            rules={[{ required: true, message: \"Odaberite grad!\" }]}\n          >\n            <Select placeholder=\"Grad\">{optionGradovi}</Select>\n          </Form.Item> */}\n\n          <Form.Item\n            name=\"domID\"\n            rules={[{ required: true, message: \"Odaberite dom!\" }]}\n          >\n            <Select placeholder=\"Dom\">{optionDomovi}</Select>\n          </Form.Item>\n\n          <Form.Item\n            name=\"paviljon\"\n            rules={[\n              { required: true, message: \"Odaberite paviljon!\" },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  const re = /^[0-9\\b]+$/;\n                  if (\n                    value === \"\" ||\n                    (re.test(value) && value >= 1 && value <= 20)\n                  ) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\"Upišite broj od 1 do 20!\");\n                },\n              }),\n            ]}\n          >\n            <Input\n              prefix={<HomeOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Paviljon\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"kategorijaSobe\"\n            rules={[\n              { required: true, message: \"Odaberite kategoriju sobe!\" },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  const re = /^[0-9\\b]+$/;\n                  if (\n                    value === \"\" ||\n                    (re.test(value) && value >= 1 && value <= 7)\n                  ) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\"Upišite broj od 1 do 7!\");\n                },\n              }),\n            ]}\n          >\n            <Input\n              prefix={<HomeOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Kategorija sobe\"\n            />\n          </Form.Item>\n\n          <Form.Item\n            name=\"kat\"\n            rules={[\n              { required: true, message: \"Odaberite kat!\" },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  const re = /^[0-9\\b]+$/;\n                  if (\n                    value === \"\" ||\n                    (re.test(value) && value >= 1 && value <= 10)\n                  ) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(\"Upišite broj od 1 do 10!\");\n                },\n              }),\n            ]}\n          >\n            <Input\n              prefix={<HomeOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Kat\"\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Predaj oglas\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    );\n  }\n}\n\nexport default NewPostComponent;\n","import React, { useContext } from \"react\";\nimport { Layout } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport NewPostComponent from \"../components/NewPostComponent\";\n\nimport { TokenContext } from \"../Context\";\n\nconst { Content, Footer } = Layout;\n\nexport default function NewPostPage() {\n  const { token, setToken } = useContext(TokenContext);\n\n  return (\n    <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n      <NavBar />\n      <Content\n        className=\"site-layout-content\"\n        style={{ maxWidth: \"720px\", margin: \"auto\", padding: \"2em\" }}\n      >\n        <NewPostComponent token={token} />\n      </Content>\n\n      <Footer style={{ textAlign: \"center\" }}>\n        PiccoloGrupa © 2020 FER PI\n      </Footer>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { Form, Input, Button, Drawer, Select, notification } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\n\nimport \"./Post/EditWorkerDrawerCssFix.css\";\nimport Title from \"antd/lib/skeleton/Title\";\nconst { Option } = Select;\n\nclass EditPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  validateMessages = () => {};\n\n  render() {\n    const openNotification = (status) => {\n      if (status === 1) {\n        notification.open({\n          message: \"Uspješno ažuriranje\",\n          description: \"Novi podatci su uspješno predani!\",\n        });\n      } else if (status === 0) {\n        notification.open({\n          message: \"Neuspješna predaja\",\n          description: \"Molimo pokušajte ponovno.\",\n        });\n      }\n    };\n\n    const onFinish = (values) => {\n      values.id = this.props.id;\n      values.password = \"12345678\";\n      axios\n        .post(`${process.env.REACT_APP_API_URL}/api/v1/currentuser`, values, {\n          headers: {\n            Authorization: \"Bearer \" + this.props.token, //the token is a variable which holds the token\n          },\n        })\n        .then((res) => {\n          openNotification(1);\n        })\n        .catch((err) => {\n          openNotification(0);\n        });\n    };\n\n    const onFinishPw = (values) => {\n      values.id = this.props.id;\n      values.username = this.props.username;\n      values.name = this.props.name;\n      values.email = this.props.email;\n      values.jmbag = this.props.jmbag;\n\n      axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/api/v1/changePassword`,\n          values,\n          {\n            headers: {\n              Authorization: \"Bearer \" + this.props.token, //the token is a variable which holds the token\n            },\n          }\n        )\n        .then((res) => {\n          openNotification(1);\n        })\n        .catch((err) => {\n          openNotification(0);\n        });\n    };\n\n    const onFinishFailed = () => {};\n\n    const layout = {\n      labelCol: { span: 8 },\n    };\n\n    return (\n      <div>\n        <Drawer\n          title=\"Uredi korisničke podatke\"\n          onClose={() => this.props.closeHandler()}\n          visible={this.props.visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          // style={{ width: \"100vw\" }}\n          width={\"400px\"}\n        >\n          <>\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                name=\"username\"\n                initialValue={this.props.username}\n                rules={[\n                  {\n                    required: true,\n                    message: \"Upiši jedinstveno korisničko ime!\",\n                  },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Korisničko ime\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"email\"\n                initialValue={this.props.email}\n                rules={[\n                  { required: true, message: \"Upiši svoj Email!\" },\n                  { type: \"email\", message: \"Neispravan unos email-a\" },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Email\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"jmbag\"\n                initialValue={this.props.jmbag}\n                rules={[\n                  { required: true, message: \"Upiši svoj JMBAG!\" },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                      const re = /^[0-9\\b]+$/;\n                      if (value === \"\" || re.test(value)) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(\"Neispravan unos JMBAG-a!\");\n                    },\n                  }),\n                  { min: 10, message: \"JMBAG mora sadržavati 10 brojeva!\" },\n                  { max: 10, message: \"JMBAG mora sadržavati 10 brojeva!\" },\n                ]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"JMBAG\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"name\"\n                initialValue={this.props.name}\n                rules={[{ required: true, message: \"Upiši svoje ime!\" }]}\n              >\n                <Input\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                  placeholder=\"Ime i prezime\"\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  Ažuriraj podatke\n                </Button>\n              </Form.Item>\n            </Form>\n            <Title level={3}>Ažuriraj lozinku</Title>\n            <Form\n              name=\"normal_login\"\n              className=\"login-form\"\n              onFinish={onFinishPw}\n            >\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  { required: false, message: \"Upiši svoju lozinku!\" },\n                  { min: 8, message: \"Potrebno najmanje 8 znakova!\" },\n                ]}\n              >\n                <Input\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  placeholder=\"Lozinka\"\n                />\n              </Form.Item>\n\n              <Form.Item\n                name=\"confirmPassword\"\n                rules={[\n                  { required: false, message: \"Potvrdi svoju lozinku!\" },\n                  ({ getFieldValue }) => ({\n                    validator(rule, value) {\n                      if (!value || getFieldValue(\"password\") === value) {\n                        return Promise.resolve();\n                      }\n                      return Promise.reject(\"Lozinke se ne podudaraju!\");\n                    },\n                  }),\n                ]}\n              >\n                <Input\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                  type=\"password\"\n                  placeholder=\"Potvrdi lozinku\"\n                />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  className=\"login-form-button\"\n                >\n                  Ažuriraj lozinku\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        </Drawer>\n      </div>\n    );\n  }\n}\n\nexport default EditPost;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Layout, Typography, Card } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport EditUser from \"../components/EditUser\";\nimport axios from \"axios\";\n\nimport { TokenContext } from \"../Context\";\n\nconst { Content, Footer } = Layout;\nconst { Title } = Typography;\n\nexport default function ProfilePage() {\n  const { token, setToken } = useContext(TokenContext);\n  const [editUserDrawerVisible, setEditUserDrawerVisible] = useState(false);\n  const [username, setUsername] = useState(null);\n  const [name, setName] = useState(null);\n  const [jmbag, setJmbag] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [id, setId] = useState(null);\n\n  const showDrawer = () => {\n    setEditUserDrawerVisible(true);\n  };\n\n  const onCloseDrawer = () => {\n    setEditUserDrawerVisible(false);\n  };\n\n  const getData = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/v1/currentuser`, {\n        headers: {\n          Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n        },\n      })\n      .then((res) => {\n        setUsername(res.data.username);\n        setName(res.data.name);\n        setJmbag(res.data.jmbag);\n        setEmail(res.data.email);\n        setId(res.data.id);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n      <NavBar />\n      <Content>\n        <br />\n        <Card\n          style={{ maxWidth: \"720px\", margin: \"auto\" }}\n          actions={[\n            <div onClick={() => showDrawer()}>\n              <EditOutlined /> uredi\n            </div>,\n          ]}\n        >\n          <Title>Moj profil</Title>\n          <br />\n          <p>Korisničko ime: {username}</p>\n          <p>Email: {email}</p>\n          <p>Ime i prezime: {name}</p>\n          <p>JMBAG: {jmbag}</p>\n        </Card>\n        <EditUser\n          visible={editUserDrawerVisible}\n          closeHandler={() => onCloseDrawer()}\n          username={username}\n          name={name}\n          email={email}\n          jmbag={jmbag}\n          id={id}\n          token={token}\n        />\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        PiccoloGrupa © 2020 FER PI\n      </Footer>\n    </Layout>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Layout, Typography, Input, Select } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport { Button, Card } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport MyPost from \"../components/Post/MyPost\";\n\nimport { TokenContext } from \"../Context\";\n\nconst { Content, Footer } = Layout;\nconst { Title } = Typography;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nexport default function MyPostsPage() {\n  const { token, setToken } = useContext(TokenContext);\n\n  const [posts, setPosts] = useState([]);\n  const [currentEditPost, setCurrentEditPost] = useState(false);\n\n  const getPosts = () => {\n    var posts = [];\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/home/vlastitiOglasi`, {\n        headers: {\n          Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n        },\n      })\n      .then((res) => {\n        posts = res.data;\n        setPosts(res.data);\n      });\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  const meta = {\n    columns: 1,\n    fields: [{ key: \"izvuc grad\", label: \"Grad\", requried: true }], //nije dobro tako, nego treba sve izvuc odjednom iz baze u jedan json\n  };\n\n  return (\n    <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n      <NavBar />\n      <Content>\n        {/* <div\n          className=\"site-layout-content\"\n          style={{ maxWidth: \"720px\", margin: \"0 auto\" }}\n        > */}\n        <br />\n        <Card style={{ maxWidth: \"720px\", margin: \"auto\", padding: \"2em\" }}>\n          <Title level={3}>Moji oglasi</Title>\n          <Link to=\"/newpost\">\n            <Button type=\"primary\">\n              Stvori novi oglas\n              <EditOutlined />\n            </Button>\n          </Link>\n        </Card>\n        <br />\n        {posts.map((post) => (\n          <MyPost\n            key={post.idOglas}\n            kat={post.kat}\n            idOglas={post.idOglas}\n            paviljon={post.paviljon}\n            kategorija_sobe={post.kategorijaSobe}\n            title={post.dom.imeDoma}\n            idDom={post.dom.idDom}\n            aktivan={post.aktivan}\n          />\n        ))}\n        <br />\n      </Content>\n\n      <Footer style={{ textAlign: \"center\" }}>\n        PiccoloGrupa © 2020 FER PI\n      </Footer>\n    </Layout>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Layout, Typography, Input, Select } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport { Button, Card } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport FormBuilder from \"antd-form-builder\";\n\nimport { TokenContext } from \"../Context\";\n\nconst { Content, Footer } = Layout;\nconst { Title } = Typography;\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nexport default function MyPostsPage() {\n  const { token, setToken } = useContext(TokenContext);\n\n  const USER_ACTIVE_POST = {\n    // axios\n    //       .get(\"https://room-switchr.herokuapp.com/api/test/currentuser\", {\n    //         // headers: {\n    //         //   Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n    //         // },\n    //       })\n    //       .then((res) => {\n    //         const korisnicko_ime = JSON.stringify(res.data);        //trenutno ne radi\n    //         setUsername(korisnicko_ime)\n    //       });\n  };\n  const USER_NOT_ACTIVE_POSTS = {};\n\n  const meta = {\n    columns: 1,\n    fields: [{ key: \"izvuc grad\", label: \"Grad\", requried: true }], //nije dobro tako, nego treba sve izvuc odjednom iz baze u jedan json\n  };\n\n  return (\n    <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n      <NavBar />\n      <Content style={{ maxWidth: \"720px\", margin: \"auto\", padding: \"2em\" }}>\n        {/* <div\n          className=\"site-layout-content\"\n          style={{ maxWidth: \"720px\", margin: \"0 auto\" }}\n        > */}\n        <Card>\n          <Title>\n            Moji oglasi &nbsp;&nbsp;&nbsp;&nbsp;\n            <Link to=\"/newpost\">\n              <Button type=\"primary\">\n                Stvori novi oglas\n                <EditOutlined />\n              </Button>\n            </Link>\n          </Title>\n\n          {/* ovdje ispisati njegove oglase, prvo onaj aktivni */}\n          <Card>\n            <h3>AKTIVAN OGLAS</h3>\n            <FormBuilder\n              name=\"aktivan_oglas\"\n              meta={meta}\n              values={USER_ACTIVE_POST}\n              viewMode={true}\n            />\n            <Link to=\"/editpost\" value={meta.fields.key}>\n              <Button type=\"primary\" style={{ padding: \"5px\" }}>\n                Uredi\n                <EditOutlined />\n              </Button>\n            </Link>\n          </Card>\n          <br></br>\n\n          {/* napraviti for petlju za svaki ostali oglas */}\n          <Card>\n            <FormBuilder\n              name=\"neaktivan_oglas\"\n              meta={meta}\n              values={USER_NOT_ACTIVE_POSTS}\n              viewMode={true}\n            />\n            <Link to=\"/editpost\" value={meta.fields.key}>\n              {/* za uređivanje poslati value=\"id post\" */}\n              <Button type=\"primary\" style={{ padding: \"5px\" }}>\n                Uredi\n                <EditOutlined />\n              </Button>\n            </Link>\n          </Card>\n          <br></br>\n        </Card>\n      </Content>\n\n      <Footer style={{ textAlign: \"center\" }}>\n        PiccoloGrupa © 2020 FER PI\n      </Footer>\n    </Layout>\n  );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Card, Avatar, notification, Button } from \"antd\";\nimport axios from \"axios\";\n\nimport ReactTooltip from \"react-tooltip\";\n\nimport { TokenContext } from \"../../Context\";\nimport { LoginContext } from \"../../Context\";\n\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nvar MappleToolTip = require(\"reactjs-mappletooltip\");\n\nfunction Post(props) {\n  const title = \"Dom: \" + props.title;\n  //const description = props.description;\n  const idOglas = props.idOglas;\n  const kategorija_sobe = props.kategorija_sobe;\n  const kat = props.kat;\n  const paviljon = props.paviljon;\n  const idLanac = props.idLanac;\n\n  const { token, setToken } = useContext(TokenContext);\n  const { loggedIn, setLoggedIn } = useContext(LoginContext);\n  const [like, setLike] = useState();\n\n  const [like1, setLike1] = useState(false);\n  const [like2, setLike2] = useState(false);\n  const [like3, setLike3] = useState(false);\n\n  const likeErrorNotification = () => {\n    notification[\"error\"]({\n      message: \"Greška\",\n      description: \"Došlo je do greške prilikom potvrde zamjene.\",\n    });\n  };\n\n  const likeHandler = async (oglasId, stupanjLajkanja) => {\n    let values = {\n      oglasId: oglasId,\n      stupanjLajkanja: stupanjLajkanja,\n    };\n\n    try {\n      await axios\n        .post(`${process.env.REACT_APP_API_URL}/api/home/`, values, {\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        })\n        .then((res) => {\n          switch (res.data.stupanjLajkanja) {\n            case 1:\n              setLike1(true);\n              setLike2(false);\n              setLike3(false);\n              break;\n            case 2:\n              setLike1(false);\n              setLike2(true);\n              setLike3(false);\n              break;\n\n            case 3:\n              setLike1(false);\n              setLike2(false);\n              setLike3(true);\n              break;\n\n            case 0:\n              setLike1(false);\n              setLike2(false);\n              setLike3(false);\n              break;\n\n            default:\n              break;\n          }\n        });\n    } catch (error) {\n      likeErrorNotification();\n    }\n  };\n\n  const setLikeFromAPI = (lajk) => {\n    if (lajk == 1) {\n      setLike1(true);\n    }\n\n    if (lajk == 2) {\n      setLike2(true);\n    }\n\n    if (lajk == 3) {\n      setLike3(true);\n    }\n  };\n\n  const Remove = () => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/home/`,\n        {\n          stupanjLajkanja: \"4\",\n          oglasId: idOglas,\n        },\n        {\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res);\n      });\n  };\n\n  const ConfirmSwap = async (oglasId) => {\n    let values = {\n      idLanca: idLanac,\n      //oglas: oglasId,\n    };\n    try {\n      await axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/api/v1/potvrdiZamjenu`,\n          values,\n          {\n            headers: {\n              Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res.data);\n          notification.open({\n            message: \"Uspješno potvrđena zamjena\",\n            description:\n              \"Ukoliko se zamjena bude uspješna dobiti ćete mail sa potvrdom o uspješnoj zamjeni\",\n          });\n        });\n    } catch (error) {\n      likeErrorNotification();\n    }\n  };\n  const RejectSwap = async (oglasId) => {\n    let values = {\n      idLanca: idLanac,\n      //oglas: oglasId,\n    };\n    try {\n      await axios\n        .post(`${process.env.REACT_APP_API_URL}/api/v1/odbijZamjenu`, values, {\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        })\n        .then((res) => {\n          console.log(res.data);\n          notification.open({\n            message: \"Uspješno odbačena zamjena\",\n            // description: \"\",\n          });\n        });\n    } catch (error) {\n      likeErrorNotification();\n    }\n  };\n\n  useEffect(() => {\n    setLikeFromAPI(props.lajk);\n  }, []);\n\n  return (\n    <div>\n      {loggedIn ? (\n        <Card\n          style={{ maxWidth: \"720px\", margin: \"auto\" }}\n          actions={[\n            <div onClick={() => ConfirmSwap(idOglas)}>\n              <CheckCircleOutlined /> Potvrdi\n            </div>,\n            <div onClick={() => RejectSwap(idOglas)}>\n              <CloseCircleOutlined /> Odbij\n            </div>,\n          ]}\n        >\n          <Meta\n            title={title}\n            description={\n              <React.Fragment>\n                <p>Paviljon:{paviljon}</p>\n                <p>Kat:{kat}</p>\n                <p>Kategorija sobe:{kategorija_sobe}</p>\n              </React.Fragment>\n            }\n          />\n        </Card>\n      ) : (\n        <Card style={{ maxWidth: \"720px\", margin: \"auto\" }}>\n          <Meta\n            title={title}\n            description={\n              <React.Fragment>\n                <p>Paviljon: {paviljon}</p>\n                <p>Kat: {kat}</p>\n                <p>Kategorija sobe: {kategorija_sobe}</p>\n              </React.Fragment>\n            }\n          />\n        </Card>\n      )}\n\n      <br />\n    </div>\n  );\n}\n\nexport default Post;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Layout } from \"antd\";\nimport { Button, Card, Form, notification } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\nimport PostConfirm from \"../components/Post/PostConfirm\";\nimport Title from \"antd/lib/skeleton/Title\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport NavBar from \"../components/NavBar/NavBar\";\n\nimport { TokenContext } from \"../Context\";\n\nconst { Content, Footer } = Layout;\n\nexport default function ConfirmSwapPage() {\n  //let { token, id_oglas_moj, id_oglas_tudi } = useParams();\n\n  const { token, setToken } = useContext(TokenContext);\n\n  const [posts, setPosts] = useState([]);\n  //const [idLanac, setIdLanac] = useState([]);\n\n  const Confirm = () => {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/v1/potvrdiZamjenu`, {\n        token: token,\n        //idLanac: idLanac,\n      })\n      .then((res) => {\n        notification.open({\n          message: \"Uspješno zatražena zamjena!\",\n          description: \"Biti ćete obavješteni putem maila o izvršenoj zamjeni.\",\n        });\n      });\n  };\n\n  const Cancel = () => {\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/v1/odbijZamjenu`, {\n        token: token,\n      })\n      .then((res) => {\n        notification.open({\n          message: \"Uspješno odbačena zamjena!\",\n        });\n      });\n  };\n\n  const getPosts = () => {\n    var posts = [];\n\n    //dobivam idLanac, rednibroj, oglas za mog studenta\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/v1/zamjene`, {\n        //provjeriti sve sa backendom\n        headers: {\n          Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n        },\n      })\n      .then((res) => {\n        posts = res.data;\n        setPosts(posts);\n        //setIdLanac(res.data.idLanca);\n      });\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n        <NavBar />\n        {/* <div className=\"nav\" style={{justifyContent: 'left'}}>\n                <img alt=\"logo\" src=\"/room.png\" className=\"navLogo\" />\n                <Link to=\"/\">\n                    <span className=\"navName\" >RoomSwitchr</span>\n                </Link>\n            </div> */}\n\n        <Content style={{ padding: \"0 50px\" }}>\n          <br />\n\n          {posts.length != 0 ? (\n            posts.map((post) => (\n              <div\n                className=\"site-layout-content\"\n                style={{ maxWidth: \"720px\", margin: \"0 auto\" }}\n              >\n                <PostConfirm\n                  key={post.oglas.idOglas}\n                  idOglas={post.oglas.idOglas}\n                  kat={post.oglas.kat}\n                  paviljon={post.oglas.paviljon}\n                  kategorija_sobe={post.oglas.kategorijaSobe}\n                  title={post.oglas.dom.imeDoma}\n                  idLanac={post.idLanca}\n                />\n                <br />\n              </div>\n            ))\n          ) : (\n            <Card\n              style={{ maxWidth: \"720px\", margin: \"auto\", textAlign: \"center\" }}\n            >\n              <p>Nema oglasa za prikaz.</p>\n            </Card>\n          )}\n        </Content>\n\n        <Footer style={{ textAlign: \"center\" }}>\n          PiccoloGrupa © 2020 FER PI\n        </Footer>\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Layout, Typography, Input, Select } from \"antd\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport { Button, Card } from \"antd\";\nimport axios from \"axios\";\nimport Post from \"../components/Post/Post\";\n\nimport { TokenContext } from \"../Context\";\n\nconst { Content, Footer } = Layout;\nconst { Title } = Typography;\n\nexport default function MyPostsPage() {\n  const { token, setToken } = useContext(TokenContext);\n  const [posts, setPosts] = useState([]);\n\n  const getPosts = () => {\n    var posts = [];\n    axios\n      .get(\n        `${process.env.REACT_APP_API_URL}/api/home/oglasiStudenataKojiSuLajkali`,\n        {\n          //provjeriti sve sa backendom\n          headers: {\n            Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n          },\n        }\n      )\n      .then((res) => {\n        posts = res.data;\n        setPosts(posts);\n      });\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n      <NavBar />\n      <Content>\n        <br />\n        <Card style={{ maxWidth: \"720px\", margin: \"auto\", padding: \"2em\" }}>\n          <Title level={3}>\n            Oglasi osoba koje su označile vaš oglas sa \"sviđa mi se\"\n          </Title>\n        </Card>\n        <br />\n        {posts.length != 0 ? (\n          posts.map((post) => (\n            <Post\n              key={post.oglas.idOglas}\n              kat={post.oglas.kat}\n              paviljon={post.oglas.paviljon}\n              kategorija_sobe={post.oglas.kategorijaSobe}\n              title={post.oglas.dom.imeDoma}\n              idOglas={post.oglas.idOglas}\n              lajk={post.stupanjLajkanja}\n            />\n          ))\n        ) : (\n          <Card\n            style={{ maxWidth: \"720px\", margin: \"auto\", textAlign: \"center\" }}\n          >\n            <p>Nema oglasa za prikaz.</p>\n          </Card>\n        )}\n\n        <br />\n      </Content>\n\n      <Footer style={{ textAlign: \"center\" }}>\n        PiccoloGrupa © 2020 FER PI\n      </Footer>\n    </Layout>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport { Button, Card, Form, notification } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Post from \"../components/Post/Post\";\nimport axios from \"axios\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport NavBar from \"../components/NavBar/NavBar\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\n\nimport { LoginContext } from \"../Context\";\nimport { TokenContext } from \"../Context\";\n\nconst { Content, Footer } = Layout;\n\nexport default function SCDjelatnikPage() {\n  const { loggedIn, setLoggedIn } = useContext(LoginContext);\n  const { token, setToken } = useContext(TokenContext);\n  const [lanci, setLanci] = useState([]);\n\n  const ConfirmSwap = async (idLanac) => {\n    let values = {\n      idLanca: idLanac,\n      //oglas: oglasId,\n    };\n    try {\n      await axios\n        .post(\n          `${process.env.REACT_APP_API_URL}/api/v1/potvrdiZamjenu`,\n          values,\n          {\n            headers: {\n              Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res.data);\n          notification.open({\n            message: \"Uspješno potvrđena zamjena\",\n            description:\n              \"Ukoliko se zamjena bude uspješna dobiti ćete mail sa potvrdom o uspješnoj zamjeni\",\n          });\n          getSwaps();\n        });\n    } catch (error) {}\n  };\n\n  const getSwaps = () => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/v1/zamjene`, {\n        headers: {\n          Authorization: \"Bearer \" + token, //the token is a variable which holds the token\n        },\n      })\n      .then((res) => {\n        // console.log(res.data);\n        var uniqueIds = [];\n        var uniqueIdsObject = [];\n\n        if (res.data.length === 0) {\n          //neš tu treba\n        } else {\n          res.data.forEach((objekt) => {\n            // console.log(objekt);\n            // console.log(\"(!uniqueIds.includes(objekt.idLanca)):\");\n            // console.log(!uniqueIds.includes(objekt.idLanca));\n            // console.log(\"uniqueIds:\");\n            // console.log(uniqueIds);\n            if (!uniqueIds.includes(objekt.idLanca)) {\n              uniqueIds.push(objekt.idLanca);\n              uniqueIdsObject.push({ idLanca: objekt.idLanca, oglasi: [] });\n            }\n          });\n\n          res.data.forEach((objekt) => {\n            for (var i = 0; i < uniqueIdsObject.length; i++) {\n              if (uniqueIdsObject[i].idLanca == objekt.idLanca) {\n                uniqueIdsObject[i].oglasi.push(objekt.oglas);\n              }\n            }\n          });\n\n          setLanci(uniqueIdsObject);\n          // console.log(uniqueIds);\n          // console.log(uniqueIdsObject);\n        }\n      });\n  };\n\n  let lanciComponent = Object.keys(lanci).map((lanac) => {\n    return (\n      <Card\n        title={lanci[lanac].idLanca}\n        bordered={false}\n        style={{ maxWidth: \"720px\", margin: \"auto\", width: \"100%\" }}\n        actions={[\n          <div onClick={() => ConfirmSwap(lanci[lanac].idLanca)}>\n            <CheckCircleOutlined /> Potvrdi\n          </div>,\n        ]}\n      >\n        {lanci[lanac].oglasi.map((oglas) => {\n          return (\n            <div\n              style={{\n                borderBottom: \"2px solid #f0f0f0\",\n                marginBottom: \"10px\",\n              }}\n            >\n              <h3>Student</h3>\n              <p>ime: {oglas.student.name}</p>\n              <p>email: {oglas.student.email}</p>\n              <p>JMBAG: {oglas.student.jmbag}</p>\n              <br />\n              <h3>Soba</h3>\n\n              <p>Dom: {oglas.dom.imeDoma}</p>\n              <p>Paviljon: {oglas.paviljon}</p>\n              <p>Kat: {oglas.kat}</p>\n              <p>Kategorija sobe: {oglas.kategorijaSobe}</p>\n              <br />\n            </div>\n          );\n        })}\n      </Card>\n    );\n  });\n\n  const Confirm = (id) => {\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/api/v1/potvrdiZamjenu`,\n        {},\n        {\n          headers: {\n            Authorization: \"Bearer \" + token,\n          },\n        }\n      )\n      .then((res) => {\n        notification.open({\n          message: \"Završena zamjena\",\n          description: \"Uspješno ste potvrdili zamjene\",\n        });\n      })\n      .catch((res) => {\n        console.log(\"request failed\", res);\n      });\n  };\n\n  useEffect(() => {\n    getSwaps();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n        <NavBar />\n        <Content style={{ padding: \"0 50px\" }}>\n          <div\n            className=\"site-layout-content\"\n            style={{ maxWidth: \"720px\", margin: \"0 auto\" }}\n          >\n            <br />\n          </div>\n        </Content>\n        {lanciComponent}\n        <Footer style={{ textAlign: \"center\" }}>\n          PiccoloGrupa © 2020 FER PI\n        </Footer>\n      </Layout>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport NewPostPage from \"./pages/NewPostPage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport MyPostsPage from \"./pages/MyPostsPage\";\nimport EditPostPage from \"./pages/EditPostPage\";\nimport ConfirmSwapPage from \"./pages/ConfirmSwapPage\";\nimport RecievedLikesPage from \"./pages/RecievedLikesPage\";\nimport SCDjelatnikPage from \"./pages/SCDjelatnikPage\";\nimport dotenv from \"dotenv\";\n\n// import objaveService from './services/ObjaveService';\n\nimport { LoginContext } from \"./Context\";\nimport { TokenContext } from \"./Context\";\nimport { RoleContext } from \"./Context\";\n\nexport default function App() {\n  require(\"dotenv\").config();\n\n  // state = {\n  //   objave: []\n  // };\n\n  // componentDidMount(){\n  //     objaveService.getObjave().then((res) => {\n  //     this.setState({ objave: res.data})\n  //   });\n  // }\n\n  //render() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n\n  const App = () => (\n    <div>\n      <LoginContext.Provider value={{ loggedIn, setLoggedIn }}>\n        <TokenContext.Provider value={{ token, setToken }}>\n          <RoleContext.Provider value={{ role, setRole }}>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/myposts\" component={MyPostsPage} />\n            <Route exact path=\"/newpost\" component={NewPostPage} />\n            <Route exact path=\"/editpost\" component={EditPostPage} />\n            <Route exact path=\"/profile\" component={ProfilePage} />\n            <Route exact path=\"/confirmswap\" component={ConfirmSwapPage} />\n            <Route\n              exact\n              path=\"/recievedlikesposts\"\n              component={RecievedLikesPage}\n            />\n            <Route exact path=\"/scdjelatnik\" component={SCDjelatnikPage} />\n          </RoleContext.Provider>\n        </TokenContext.Provider>\n      </LoginContext.Provider>\n    </div>\n  );\n  return (\n    <Switch basename={process.env.PUBLIC_URL}>\n      <App />\n    </Switch>\n  );\n  //}\n}\n\n//export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}